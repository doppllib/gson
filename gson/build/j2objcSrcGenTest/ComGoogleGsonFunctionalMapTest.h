//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalMapTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalMapTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalMapTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalMapTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalMapTest

#if !defined (ComGoogleGsonFunctionalMapTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalMapTest || defined(INCLUDE_ComGoogleGsonFunctionalMapTest))
#define ComGoogleGsonFunctionalMapTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalMapTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

- (void)testBooleanKeyDeserialization;

- (void)testComplexKeysDeserialization;

- (void)testComplexKeysSerialization;

- (void)testConcurrentHashMap;

- (void)testConcurrentMap;

- (void)testConcurrentNavigableMap;

- (void)testConcurrentSkipListMap;

- (void)testCustomSerializerForSpecificMapType;

- (void)testDeerializeMapOfMaps;

- (void)testGeneralMapField;

- (void)testHashMapDeserialization;

- (void)testInterfaceTypeMap;

- (void)testInterfaceTypeMapWithSerializer;

- (void)testMapDeserialization;

- (void)testMapDeserializationEmpty;

- (void)testMapDeserializationWithDuplicateKeys;

- (void)testMapDeserializationWithIntegerKeys;

- (void)testMapDeserializationWithNullKey;

- (void)testMapDeserializationWithNullValue;

- (void)testMapDeserializationWithWildcardValues;

- (void)testMapNamePromotionWithJsonElementReader;

- (void)testMapOfMapDeserialization;

- (void)testMapOfMapSerialization;

- (void)testMapSerialization;

- (void)testMapSerializationEmpty;

- (void)testMapSerializationWithIntegerKeys;

- (void)testMapSerializationWithNullKey;

- (void)testMapSerializationWithNullValue;

- (void)testMapSerializationWithNullValueButSerializeNulls;

- (void)testMapSerializationWithNullValues;

- (void)testMapSerializationWithNullValuesSerialized;

- (void)testMapSerializationWithWildcardValues;

- (void)testMapStandardSubclassDeserialization;

- (void)testMapSubclassDeserialization;

- (void)testMapSubclassSerialization;

- (void)testMapWithQuotes;

- (void)testNumberKeyDeserialization;

- (void)testParameterizedMapSubclassSerialization;

- (void)testRawMapSerialization;

- (void)testReadMapsWithEmptyStringKey;

- (void)testSerializeMapOfMaps;

- (void)testSerializeMaps;

- (void)testSortedMap;

- (void)testStringKeyDeserialization;

- (void)testWriteMapsWithEmptyStringKey;

#pragma mark Protected

- (void)setUp;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalMapTest_init(ComGoogleGsonFunctionalMapTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest *new_ComGoogleGsonFunctionalMapTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest *create_ComGoogleGsonFunctionalMapTest_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest)

#endif

#if !defined (ComGoogleGsonFunctionalMapTest_Point_) && (INCLUDE_ALL_ComGoogleGsonFunctionalMapTest || defined(INCLUDE_ComGoogleGsonFunctionalMapTest_Point))
#define ComGoogleGsonFunctionalMapTest_Point_

@interface ComGoogleGsonFunctionalMapTest_Point : NSObject

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)x
                    withInt:(jint)y;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_Point)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(ComGoogleGsonFunctionalMapTest_Point *self, jint x, jint y);

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest_Point *new_ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(jint x, jint y) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest_Point *create_ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(jint x, jint y);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest_Point)

#endif

#if !defined (ComGoogleGsonFunctionalMapTest_MapClass_) && (INCLUDE_ALL_ComGoogleGsonFunctionalMapTest || defined(INCLUDE_ComGoogleGsonFunctionalMapTest_MapClass))
#define ComGoogleGsonFunctionalMapTest_MapClass_

@class ComGoogleGsonCommonTestTypes_Base;
@class ComGoogleGsonCommonTestTypes_Sub;

@interface ComGoogleGsonFunctionalMapTest_MapClass : NSObject

#pragma mark Public

- (void)addBaseWithNSString:(NSString *)name
withComGoogleGsonCommonTestTypes_Base:(ComGoogleGsonCommonTestTypes_Base *)value;

- (void)addSubWithNSString:(NSString *)name
withComGoogleGsonCommonTestTypes_Sub:(ComGoogleGsonCommonTestTypes_Sub *)value;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_MapClass)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalMapTest_MapClass_init(ComGoogleGsonFunctionalMapTest_MapClass *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest_MapClass *new_ComGoogleGsonFunctionalMapTest_MapClass_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest_MapClass *create_ComGoogleGsonFunctionalMapTest_MapClass_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest_MapClass)

#endif

#if !defined (ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_) && (INCLUDE_ALL_ComGoogleGsonFunctionalMapTest || defined(INCLUDE_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters))
#define ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_

@protocol JavaUtilMap;

@interface ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters : NSObject {
 @public
  id<JavaUtilMap> map_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters, map_, id<JavaUtilMap>)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *new_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *create_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalMapTest")
