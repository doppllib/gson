//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonStreamJsonWriterTest")
#ifdef RESTRICT_ComGoogleGsonStreamJsonWriterTest
#define INCLUDE_ALL_ComGoogleGsonStreamJsonWriterTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonStreamJsonWriterTest 1
#endif
#undef RESTRICT_ComGoogleGsonStreamJsonWriterTest

#if !defined (ComGoogleGsonStreamJsonWriterTest_) && (INCLUDE_ALL_ComGoogleGsonStreamJsonWriterTest || defined(INCLUDE_ComGoogleGsonStreamJsonWriterTest))
#define ComGoogleGsonStreamJsonWriterTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonStreamJsonWriterTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

- (void)testArraysInObjects;

- (void)testBadNestingArray;

- (void)testBadNestingObject;

- (void)testBooleans;

- (void)testClosedWriterThrowsOnFlush;

- (void)testClosedWriterThrowsOnName;

- (void)testClosedWriterThrowsOnStructure;

- (void)testClosedWriterThrowsOnValue;

- (void)testDeepNestingArrays;

- (void)testDeepNestingObjects;

- (void)testDoubles;

- (void)testEmptyArray;

- (void)testEmptyObject;

- (void)testInvalidTopLevelTypes;

- (void)testJsonValue;

- (void)testLenientWriterPermitsMultipleTopLevelValues;

- (void)testLongs;

- (void)testMultipleTopLevelValues;

- (void)testNameWithoutValue;

- (void)testNonFiniteBoxedDoubles;

- (void)testNonFiniteDoubles;

- (void)testNullName;

- (void)testNulls;

- (void)testNullStringValue;

- (void)testNumbers;

- (void)testObjectsInArrays;

- (void)testPrettyPrintArray;

- (void)testPrettyPrintObject;

- (void)testRepeatedName;

- (void)testStrictWriterDoesNotPermitMultipleTopLevelValues;

- (void)testStrings;

- (void)testTopLevelValueTypes;

- (void)testTwoNames;

- (void)testUnicodeLineBreaksEscaped;

- (void)testValueWithoutName;

- (void)testWriterCloseIsIdempotent;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonStreamJsonWriterTest)

FOUNDATION_EXPORT void ComGoogleGsonStreamJsonWriterTest_init(ComGoogleGsonStreamJsonWriterTest *self);

FOUNDATION_EXPORT ComGoogleGsonStreamJsonWriterTest *new_ComGoogleGsonStreamJsonWriterTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonStreamJsonWriterTest *create_ComGoogleGsonStreamJsonWriterTest_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonStreamJsonWriterTest)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonStreamJsonWriterTest")
