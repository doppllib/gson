//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleGsonAnnotationsSerializedName.h"
#include "ComGoogleGsonFunctionalSerializedNameTest.h"
#include "ComGoogleGsonGson.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalSerializedNameTest () {
 @public
  ComGoogleGsonGson *gson_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalSerializedNameTest, gson_, ComGoogleGsonGson *)

@interface ComGoogleGsonFunctionalSerializedNameTest_MyClass : NSObject {
 @public
  NSString *a_;
  NSString *b_;
}

- (instancetype)initWithNSString:(NSString *)a
                    withNSString:(NSString *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalSerializedNameTest_MyClass)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalSerializedNameTest_MyClass, a_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalSerializedNameTest_MyClass, b_, NSString *)

__attribute__((unused)) static void ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(ComGoogleGsonFunctionalSerializedNameTest_MyClass *self, NSString *a, NSString *b);

__attribute__((unused)) static ComGoogleGsonFunctionalSerializedNameTest_MyClass *new_ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(NSString *a, NSString *b) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalSerializedNameTest_MyClass *create_ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(NSString *a, NSString *b);

__attribute__((unused)) static IOSObjectArray *ComGoogleGsonFunctionalSerializedNameTest_MyClass__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleGsonFunctionalSerializedNameTest_MyClass__Annotations$1();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalSerializedNameTest_MyClass)

@implementation ComGoogleGsonFunctionalSerializedNameTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalSerializedNameTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testFirstNameIsChosenForSerialization {
  ComGoogleGsonFunctionalSerializedNameTest_MyClass *target = create_ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(@"v1", @"v2");
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"name\":\"v1\",\"name1\":\"v2\"}", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testMultipleNamesDeserializedCorrectly {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v1", ((ComGoogleGsonFunctionalSerializedNameTest_MyClass *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{'name':'v1'}" withIOSClass:ComGoogleGsonFunctionalSerializedNameTest_MyClass_class_()]))->a_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v11", ((ComGoogleGsonFunctionalSerializedNameTest_MyClass *) nil_chk([gson_ fromJsonWithNSString:@"{'name1':'v11'}" withIOSClass:ComGoogleGsonFunctionalSerializedNameTest_MyClass_class_()]))->b_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v2", ((ComGoogleGsonFunctionalSerializedNameTest_MyClass *) nil_chk([gson_ fromJsonWithNSString:@"{'name2':'v2'}" withIOSClass:ComGoogleGsonFunctionalSerializedNameTest_MyClass_class_()]))->b_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v3", ((ComGoogleGsonFunctionalSerializedNameTest_MyClass *) nil_chk([gson_ fromJsonWithNSString:@"{'name3':'v3'}" withIOSClass:ComGoogleGsonFunctionalSerializedNameTest_MyClass_class_()]))->b_);
}

- (void)testMultipleNamesInTheSameString {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v3", ((ComGoogleGsonFunctionalSerializedNameTest_MyClass *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{'name1':'v1','name2':'v2','name3':'v3'}" withIOSClass:ComGoogleGsonFunctionalSerializedNameTest_MyClass_class_()]))->b_);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testFirstNameIsChosenForSerialization);
  methods[2].selector = @selector(testMultipleNamesDeserializedCorrectly);
  methods[3].selector = @selector(testMultipleNamesInTheSameString);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalSerializedNameTest_MyClass;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalSerializedNameTest = { "SerializedNameTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x11, 4, 1, -1, 0, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalSerializedNameTest;
}

@end

void ComGoogleGsonFunctionalSerializedNameTest_init(ComGoogleGsonFunctionalSerializedNameTest *self) {
  JunitFrameworkTestCase_init(self);
  JreStrongAssignAndConsume(&self->gson_, new_ComGoogleGsonGson_init());
}

ComGoogleGsonFunctionalSerializedNameTest *new_ComGoogleGsonFunctionalSerializedNameTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalSerializedNameTest, init)
}

ComGoogleGsonFunctionalSerializedNameTest *create_ComGoogleGsonFunctionalSerializedNameTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalSerializedNameTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalSerializedNameTest)

@implementation ComGoogleGsonFunctionalSerializedNameTest_MyClass

- (instancetype)initWithNSString:(NSString *)a
                    withNSString:(NSString *)b {
  ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(self, a, b);
  return self;
}

- (void)dealloc {
  RELEASE_(a_);
  RELEASE_(b_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 1 },
    { "b_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", (void *)&ComGoogleGsonFunctionalSerializedNameTest_MyClass__Annotations$0, (void *)&ComGoogleGsonFunctionalSerializedNameTest_MyClass__Annotations$1, "LComGoogleGsonFunctionalSerializedNameTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalSerializedNameTest_MyClass = { "MyClass", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1a, 1, 2, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalSerializedNameTest_MyClass;
}

@end

void ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(ComGoogleGsonFunctionalSerializedNameTest_MyClass *self, NSString *a, NSString *b) {
  NSObject_init(self);
  JreStrongAssign(&self->a_, a);
  JreStrongAssign(&self->b_, b);
}

ComGoogleGsonFunctionalSerializedNameTest_MyClass *new_ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(NSString *a, NSString *b) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalSerializedNameTest_MyClass, initWithNSString_withNSString_, a, b)
}

ComGoogleGsonFunctionalSerializedNameTest_MyClass *create_ComGoogleGsonFunctionalSerializedNameTest_MyClass_initWithNSString_withNSString_(NSString *a, NSString *b) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalSerializedNameTest_MyClass, initWithNSString_withNSString_, a, b)
}

IOSObjectArray *ComGoogleGsonFunctionalSerializedNameTest_MyClass__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonAnnotationsSerializedName([IOSObjectArray arrayWithLength:0 type:NSString_class_()], @"name") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleGsonFunctionalSerializedNameTest_MyClass__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonAnnotationsSerializedName([IOSObjectArray arrayWithObjects:(id[]){ @"name2", @"name3" } count:2 type:NSString_class_()], @"name1") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalSerializedNameTest_MyClass)
