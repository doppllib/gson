//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonMockExclusionStrategy")
#ifdef RESTRICT_ComGoogleGsonMockExclusionStrategy
#define INCLUDE_ALL_ComGoogleGsonMockExclusionStrategy 0
#else
#define INCLUDE_ALL_ComGoogleGsonMockExclusionStrategy 1
#endif
#undef RESTRICT_ComGoogleGsonMockExclusionStrategy

#if !defined (ComGoogleGsonMockExclusionStrategy_) && (INCLUDE_ALL_ComGoogleGsonMockExclusionStrategy || defined(INCLUDE_ComGoogleGsonMockExclusionStrategy))
#define ComGoogleGsonMockExclusionStrategy_

#define RESTRICT_ComGoogleGsonExclusionStrategy 1
#define INCLUDE_ComGoogleGsonExclusionStrategy 1
#include "ComGoogleGsonExclusionStrategy.h"

@class ComGoogleGsonFieldAttributes;
@class IOSClass;

@interface ComGoogleGsonMockExclusionStrategy : NSObject < ComGoogleGsonExclusionStrategy >

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)skipClass
                    withBoolean:(jboolean)skipField;

- (jboolean)shouldSkipClassWithIOSClass:(IOSClass *)clazz;

- (jboolean)shouldSkipFieldWithComGoogleGsonFieldAttributes:(ComGoogleGsonFieldAttributes *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonMockExclusionStrategy)

FOUNDATION_EXPORT void ComGoogleGsonMockExclusionStrategy_initWithBoolean_withBoolean_(ComGoogleGsonMockExclusionStrategy *self, jboolean skipClass, jboolean skipField);

FOUNDATION_EXPORT ComGoogleGsonMockExclusionStrategy *new_ComGoogleGsonMockExclusionStrategy_initWithBoolean_withBoolean_(jboolean skipClass, jboolean skipField) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonMockExclusionStrategy *create_ComGoogleGsonMockExclusionStrategy_initWithBoolean_withBoolean_(jboolean skipClass, jboolean skipField);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonMockExclusionStrategy)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonMockExclusionStrategy")
