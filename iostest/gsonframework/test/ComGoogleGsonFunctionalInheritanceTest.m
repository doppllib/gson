//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleGsonCommonTestTypes.h"
#include "ComGoogleGsonDopplJsonCompare.h"
#include "ComGoogleGsonFunctionalInheritanceTest.h"
#include "ComGoogleGsonGson.h"
#include "ComGoogleGsonJsonArray.h"
#include "ComGoogleGsonJsonElement.h"
#include "ComGoogleGsonJsonObject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Queue.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeSet.h"
#include "junit/framework/TestCase.h"
#include "sun/misc/Unsafe.h"

@class ComGoogleGsonFunctionalInheritanceTest_Child;

@interface ComGoogleGsonFunctionalInheritanceTest () {
 @public
  ComGoogleGsonGson *gson_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest, gson_, ComGoogleGsonGson *)

@interface ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested : ComGoogleGsonCommonTestTypes_Nested {
 @public
  jlong value_;
}

- (instancetype)initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)primitive1
                    withComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)primitive2;

- (void)appendFieldsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested)

__attribute__((unused)) static void ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *self, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2);

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *new_ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *create_ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested)

@interface ComGoogleGsonFunctionalInheritanceTest_Parent : NSObject {
 @public
  ComGoogleGsonFunctionalInheritanceTest_Child *theChild1_;
  ComGoogleGsonFunctionalInheritanceTest_Child *theChild2_;
}

- (instancetype)initWithComGoogleGsonFunctionalInheritanceTest_Child:(ComGoogleGsonFunctionalInheritanceTest_Child *)theChild1
                    withComGoogleGsonFunctionalInheritanceTest_Child:(ComGoogleGsonFunctionalInheritanceTest_Child *)theChild2;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInheritanceTest_Parent)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_Parent, theChild1_, ComGoogleGsonFunctionalInheritanceTest_Child *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_Parent, theChild2_, ComGoogleGsonFunctionalInheritanceTest_Child *)

inline jlong ComGoogleGsonFunctionalInheritanceTest_Parent_get_value();
#define ComGoogleGsonFunctionalInheritanceTest_Parent_value 5LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleGsonFunctionalInheritanceTest_Parent, value, jlong)

__attribute__((unused)) static void ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(ComGoogleGsonFunctionalInheritanceTest_Parent *self, ComGoogleGsonFunctionalInheritanceTest_Child *theChild1, ComGoogleGsonFunctionalInheritanceTest_Child *theChild2);

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_Parent *new_ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(ComGoogleGsonFunctionalInheritanceTest_Child *theChild1, ComGoogleGsonFunctionalInheritanceTest_Child *theChild2) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_Parent *create_ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(ComGoogleGsonFunctionalInheritanceTest_Child *theChild1, ComGoogleGsonFunctionalInheritanceTest_Child *theChild2);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInheritanceTest_Parent)

@interface ComGoogleGsonFunctionalInheritanceTest_Child : NSObject {
 @public
  jlong longValue_;
  jint intValue_;
  jboolean booleanValue_;
  NSString *stringValue_;
}

- (instancetype)initWithLong:(jlong)longValue
                     withInt:(jint)intValue
                 withBoolean:(jboolean)booleanValue
                withNSString:(NSString *)stringValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInheritanceTest_Child)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_Child, stringValue_, NSString *)

__attribute__((unused)) static void ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(ComGoogleGsonFunctionalInheritanceTest_Child *self, jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue);

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_Child *new_ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_Child *create_ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInheritanceTest_Child)

@interface ComGoogleGsonFunctionalInheritanceTest_BasicFinal : NSObject

- (instancetype)init;

- (NSString *)getExpectedJson;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInheritanceTest_BasicFinal)

inline jlong ComGoogleGsonFunctionalInheritanceTest_BasicFinal_get_value();
#define ComGoogleGsonFunctionalInheritanceTest_BasicFinal_value 5LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleGsonFunctionalInheritanceTest_BasicFinal, value, jlong)

__attribute__((unused)) static void ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init(ComGoogleGsonFunctionalInheritanceTest_BasicFinal *self);

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_BasicFinal *new_ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_BasicFinal *create_ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInheritanceTest_BasicFinal)

@interface ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection : NSObject {
 @public
  id<JavaUtilList> list_;
  id<JavaUtilQueue> queue_;
  id<JavaUtilSet> set_;
  id<JavaUtilSortedSet> sortedSet_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
                   withJavaUtilQueue:(id<JavaUtilQueue>)queue
                     withJavaUtilSet:(id<JavaUtilSet>)set
               withJavaUtilSortedSet:(id<JavaUtilSortedSet>)sortedSet;

- (jboolean)listContainsWithIntArray:(IOSIntArray *)values;

- (jboolean)queueContainsWithLongArray:(IOSLongArray *)values;

- (jboolean)setContainsWithFloatArray:(IOSFloatArray *)values;

- (jboolean)sortedSetContainsWithCharArray:(IOSCharArray *)values;

- (NSString *)getExpectedJson;

- (JavaLangStringBuilder *)appendWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                    withJavaUtilCollection:(id<JavaUtilCollection>)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection, list_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection, queue_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection, set_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection, sortedSet_, id<JavaUtilSortedSet>)

__attribute__((unused)) static void ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *self, id<JavaUtilList> list, id<JavaUtilQueue> queue, id<JavaUtilSet> set, id<JavaUtilSortedSet> sortedSet);

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *new_ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(id<JavaUtilList> list, id<JavaUtilQueue> queue, id<JavaUtilSet> set, id<JavaUtilSortedSet> sortedSet) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *create_ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(id<JavaUtilList> list, id<JavaUtilQueue> queue, id<JavaUtilSet> set, id<JavaUtilSortedSet> sortedSet);

__attribute__((unused)) static JavaLangStringBuilder *ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *self, JavaLangStringBuilder *sb, id<JavaUtilCollection> c);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection)

@implementation ComGoogleGsonFunctionalInheritanceTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalInheritanceTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
}

- (void)testSubClassSerialization {
  ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *target = create_ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(10, 20, false, @"stringValue"), create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(30, 40, true, @"stringValue"));
  ComGoogleGsonDopplJsonCompare_jsonSameAssertWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testBasicFinals {
  ComGoogleGsonFunctionalInheritanceTest_BasicFinal *basicFinal = create_ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init();
  NSString *expectedJson = [basicFinal getExpectedJson];
  NSString *generatedJson = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:basicFinal];
  ComGoogleGsonDopplJsonCompare_jsonSameAssertWithNSString_withNSString_(expectedJson, generatedJson);
}

- (void)testSubClassDeserialization {
  NSString *json = @"{\"value\":5,\"primitive1\":{\"longValue\":10,\"intValue\":20,\"booleanValue\":false,\"stringValue\":\"stringValue\"},\"primitive2\":{\"longValue\":30,\"intValue\":40,\"booleanValue\":true,\"stringValue\":\"stringValue\"}}";
  ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_class_()];
  ComGoogleGsonDopplJsonCompare_jsonSameAssertWithNSString_withNSString_(json, [((ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *) nil_chk(target)) getExpectedJson]);
}

- (void)testClassWithBaseFieldSerialization {
  ComGoogleGsonCommonTestTypes_ClassWithBaseField *sub = create_ComGoogleGsonCommonTestTypes_ClassWithBaseField_initWithComGoogleGsonCommonTestTypes_Base_(create_ComGoogleGsonCommonTestTypes_Sub_init());
  ComGoogleGsonJsonObject *json = (ComGoogleGsonJsonObject *) cast_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:sub], [ComGoogleGsonJsonObject class]);
  ComGoogleGsonJsonElement *base = [((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getAsJsonObject])) getWithNSString:ComGoogleGsonCommonTestTypes_ClassWithBaseField_FIELD_KEY];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME), [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk(base)) getAsJsonObject])) getWithNSString:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY])) getAsString]);
}

- (void)testClassWithBaseArrayFieldSerialization {
  IOSObjectArray *baseClasses = [IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonCommonTestTypes_Sub_init(), create_ComGoogleGsonCommonTestTypes_Sub_init() } count:2 type:ComGoogleGsonCommonTestTypes_Base_class_()];
  ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField *sub = create_ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_initWithComGoogleGsonCommonTestTypes_BaseArray_(baseClasses);
  ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:sub])) getAsJsonObject];
  ComGoogleGsonJsonArray *bases = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_FIELD_KEY])) getAsJsonArray];
  for (ComGoogleGsonJsonElement * __strong element in nil_chk(bases)) {
    JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME), [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk(element)) getAsJsonObject])) getWithNSString:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY])) getAsString]);
  }
}

- (void)testClassWithBaseCollectionFieldSerialization {
  id<JavaUtilCollection> baseClasses = create_JavaUtilArrayList_init();
  [baseClasses addWithId:create_ComGoogleGsonCommonTestTypes_Sub_init()];
  [baseClasses addWithId:create_ComGoogleGsonCommonTestTypes_Sub_init()];
  ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField *sub = create_ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_initWithJavaUtilCollection_(baseClasses);
  ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:sub])) getAsJsonObject];
  ComGoogleGsonJsonArray *bases = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_FIELD_KEY])) getAsJsonArray];
  for (ComGoogleGsonJsonElement * __strong element in nil_chk(bases)) {
    JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME), [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk(element)) getAsJsonObject])) getWithNSString:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY])) getAsString]);
  }
}

- (void)testBaseSerializedAsSub {
  ComGoogleGsonCommonTestTypes_Base *base = create_ComGoogleGsonCommonTestTypes_Sub_init();
  ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:base])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME), [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY])) getAsString]);
}

- (void)testBaseSerializedAsSubForToJsonMethod {
  ComGoogleGsonCommonTestTypes_Base *base = create_ComGoogleGsonCommonTestTypes_Sub_init();
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:base];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME)]);
}

- (void)testBaseSerializedAsBaseWhenSpecifiedWithExplicitType {
  ComGoogleGsonCommonTestTypes_Base *base = create_ComGoogleGsonCommonTestTypes_Sub_init();
  ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:base withJavaLangReflectType:ComGoogleGsonCommonTestTypes_Base_class_()])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreLoadStatic(ComGoogleGsonCommonTestTypes_Base, BASE_NAME), [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:ComGoogleGsonCommonTestTypes_Base_BASE_FIELD_KEY])) getAsString]);
  JunitFrameworkTestCase_assertNullWithId_([json getWithNSString:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY]);
}

- (void)testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod {
  ComGoogleGsonCommonTestTypes_Base *base = create_ComGoogleGsonCommonTestTypes_Sub_init();
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:base withJavaLangReflectType:ComGoogleGsonCommonTestTypes_Base_class_()];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:JreLoadStatic(ComGoogleGsonCommonTestTypes_Base, BASE_NAME)]);
  JunitFrameworkTestCase_assertFalseWithBoolean_([json java_contains:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY]);
}

- (void)testBaseSerializedAsSubWhenSpecifiedWithExplicitType {
  ComGoogleGsonCommonTestTypes_Base *base = create_ComGoogleGsonCommonTestTypes_Sub_init();
  ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:base withJavaLangReflectType:ComGoogleGsonCommonTestTypes_Sub_class_()])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME), [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY])) getAsString]);
}

- (void)testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod {
  ComGoogleGsonCommonTestTypes_Base *base = create_ComGoogleGsonCommonTestTypes_Sub_init();
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:base withJavaLangReflectType:ComGoogleGsonCommonTestTypes_Sub_class_()];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:JreLoadStatic(ComGoogleGsonCommonTestTypes_Sub, SUB_NAME)]);
}

- (void)testFinalReflection {
  SunMiscUnsafe *unsafe = SunMiscUnsafe_getUnsafe();
  IOSClass *unsafeClass = [((SunMiscUnsafe *) nil_chk(unsafe)) java_getClass];
  JavaLangReflectMethod *allocateInstance = [unsafeClass getMethod:@"allocateInstance" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_class_() } count:1 type:IOSClass_class_()]];
  ComGoogleGsonFunctionalInheritanceTest_Parent *parent = (ComGoogleGsonFunctionalInheritanceTest_Parent *) cast_chk([((JavaLangReflectMethod *) nil_chk(allocateInstance)) invokeWithId:unsafe withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleGsonFunctionalInheritanceTest_Parent_class_() } count:1 type:NSObject_class_()]], [ComGoogleGsonFunctionalInheritanceTest_Parent class]);
  JavaLangReflectField *theChild1 = [ComGoogleGsonFunctionalInheritanceTest_Parent_class_() getDeclaredField:@"theChild1"];
  JavaLangReflectField *theChild2 = [ComGoogleGsonFunctionalInheritanceTest_Parent_class_() getDeclaredField:@"theChild2"];
  [((JavaLangReflectField *) nil_chk(theChild1)) setAccessibleWithBoolean:true];
  [((JavaLangReflectField *) nil_chk(theChild2)) setAccessibleWithBoolean:true];
  [theChild1 setWithId:parent withId:create_ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(1, 2, true, @"blue")];
  [theChild2 setWithId:parent withId:create_ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(3, 4, false, @"floor")];
  ComGoogleGsonFunctionalInheritanceTest_Child *reflected = (ComGoogleGsonFunctionalInheritanceTest_Child *) cast_chk([theChild1 getWithId:parent], [ComGoogleGsonFunctionalInheritanceTest_Child class]);
  JunitFrameworkTestCase_assertEqualsWithLong_withLong_(1, ((ComGoogleGsonFunctionalInheritanceTest_Child *) nil_chk(reflected))->longValue_);
}

- (void)testSubInterfacesOfCollectionSerialization {
  id<JavaUtilList> list = create_JavaUtilLinkedList_init();
  [list addWithId:JavaLangInteger_valueOfWithInt_(0)];
  [list addWithId:JavaLangInteger_valueOfWithInt_(1)];
  [list addWithId:JavaLangInteger_valueOfWithInt_(2)];
  [list addWithId:JavaLangInteger_valueOfWithInt_(3)];
  id<JavaUtilQueue> queue = create_JavaUtilLinkedList_init();
  [queue addWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [queue addWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [queue addWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [queue addWithId:JavaLangLong_valueOfWithLong_(3LL)];
  id<JavaUtilSet> set = create_JavaUtilTreeSet_init();
  [set addWithId:JavaLangFloat_valueOfWithFloat_(0.1f)];
  [set addWithId:JavaLangFloat_valueOfWithFloat_(0.2f)];
  [set addWithId:JavaLangFloat_valueOfWithFloat_(0.3f)];
  [set addWithId:JavaLangFloat_valueOfWithFloat_(0.4f)];
  id<JavaUtilSortedSet> sortedSet = create_JavaUtilTreeSet_init();
  [sortedSet addWithId:JavaLangCharacter_valueOfWithChar_('a')];
  [sortedSet addWithId:JavaLangCharacter_valueOfWithChar_('b')];
  [sortedSet addWithId:JavaLangCharacter_valueOfWithChar_('c')];
  [sortedSet addWithId:JavaLangCharacter_valueOfWithChar_('d')];
  ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *target = create_ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(list, queue, set, sortedSet);
  ComGoogleGsonDopplJsonCompare_jsonSameAssertWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testSubInterfacesOfCollectionDeserialization {
  NSString *json = @"{\"list\":[0,1,2,3],\"queue\":[0,1,2,3],\"set\":[0.1,0.2,0.3,0.4],\"sortedSet\":[\"a\",\"b\",\"c\",\"d\"]}";
  ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_class_()];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *) nil_chk(target)) listContainsWithIntArray:[IOSIntArray arrayWithInts:(jint[]){ 0, 1, 2, 3 } count:4]]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([target queueContainsWithLongArray:[IOSLongArray arrayWithLongs:(jlong[]){ 0, 1, 2, 3 } count:4]]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([target setContainsWithFloatArray:[IOSFloatArray arrayWithFloats:(jfloat[]){ 0.1f, 0.2f, 0.3f, 0.4f } count:4]]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([target sortedSetContainsWithCharArray:[IOSCharArray arrayWithChars:(jchar[]){ 'a', 'b', 'c', 'd' } count:4]]);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testSubClassSerialization);
  methods[3].selector = @selector(testBasicFinals);
  methods[4].selector = @selector(testSubClassDeserialization);
  methods[5].selector = @selector(testClassWithBaseFieldSerialization);
  methods[6].selector = @selector(testClassWithBaseArrayFieldSerialization);
  methods[7].selector = @selector(testClassWithBaseCollectionFieldSerialization);
  methods[8].selector = @selector(testBaseSerializedAsSub);
  methods[9].selector = @selector(testBaseSerializedAsSubForToJsonMethod);
  methods[10].selector = @selector(testBaseSerializedAsBaseWhenSpecifiedWithExplicitType);
  methods[11].selector = @selector(testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod);
  methods[12].selector = @selector(testBaseSerializedAsSubWhenSpecifiedWithExplicitType);
  methods[13].selector = @selector(testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod);
  methods[14].selector = @selector(testFinalReflection);
  methods[15].selector = @selector(testSubInterfacesOfCollectionSerialization);
  methods[16].selector = @selector(testSubInterfacesOfCollectionDeserialization);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested;LComGoogleGsonFunctionalInheritanceTest_Parent;LComGoogleGsonFunctionalInheritanceTest_Child;LComGoogleGsonFunctionalInheritanceTest_BasicFinal;LComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInheritanceTest = { "InheritanceTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 17, 1, -1, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInheritanceTest;
}

@end

void ComGoogleGsonFunctionalInheritanceTest_init(ComGoogleGsonFunctionalInheritanceTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalInheritanceTest *new_ComGoogleGsonFunctionalInheritanceTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInheritanceTest, init)
}

ComGoogleGsonFunctionalInheritanceTest *create_ComGoogleGsonFunctionalInheritanceTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInheritanceTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInheritanceTest)

@implementation ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested

- (instancetype)initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)primitive1
                    withComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)primitive2 {
  ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(self, primitive1, primitive2);
  return self;
}

- (void)appendFieldsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\"value\":"])) appendWithLong:value_])) appendWithNSString:@","];
  [super appendFieldsWithJavaLangStringBuilder:sb];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:withComGoogleGsonCommonTestTypes_BagOfPrimitives:);
  methods[1].selector = @selector(appendFieldsWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonCommonTestTypes_BagOfPrimitives;LComGoogleGsonCommonTestTypes_BagOfPrimitives;", "appendFields", "LJavaLangStringBuilder;", "LComGoogleGsonFunctionalInheritanceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested = { "SubTypeOfNested", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested;
}

@end

void ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *self, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) {
  ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(self, primitive1, primitive2);
  self->value_ = 5;
}

ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *new_ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_, primitive1, primitive2)
}

ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested *create_ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_, primitive1, primitive2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInheritanceTest_SubTypeOfNested)

@implementation ComGoogleGsonFunctionalInheritanceTest_Parent

- (instancetype)initWithComGoogleGsonFunctionalInheritanceTest_Child:(ComGoogleGsonFunctionalInheritanceTest_Child *)theChild1
                    withComGoogleGsonFunctionalInheritanceTest_Child:(ComGoogleGsonFunctionalInheritanceTest_Child *)theChild2 {
  ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(self, theChild1, theChild2);
  return self;
}

- (void)dealloc {
  RELEASE_(theChild1_);
  RELEASE_(theChild2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalInheritanceTest_Child:withComGoogleGsonFunctionalInheritanceTest_Child:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value", "J", .constantValue.asLong = ComGoogleGsonFunctionalInheritanceTest_Parent_value, 0x12, 1, -1, -1, -1 },
    { "theChild1_", "LComGoogleGsonFunctionalInheritanceTest_Child;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "theChild2_", "LComGoogleGsonFunctionalInheritanceTest_Child;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalInheritanceTest_Child;LComGoogleGsonFunctionalInheritanceTest_Child;", "value", "LComGoogleGsonFunctionalInheritanceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInheritanceTest_Parent = { "Parent", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 3, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInheritanceTest_Parent;
}

@end

void ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(ComGoogleGsonFunctionalInheritanceTest_Parent *self, ComGoogleGsonFunctionalInheritanceTest_Child *theChild1, ComGoogleGsonFunctionalInheritanceTest_Child *theChild2) {
  NSObject_init(self);
  JreStrongAssign(&self->theChild1_, theChild1);
  JreStrongAssign(&self->theChild2_, theChild2);
}

ComGoogleGsonFunctionalInheritanceTest_Parent *new_ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(ComGoogleGsonFunctionalInheritanceTest_Child *theChild1, ComGoogleGsonFunctionalInheritanceTest_Child *theChild2) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInheritanceTest_Parent, initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_, theChild1, theChild2)
}

ComGoogleGsonFunctionalInheritanceTest_Parent *create_ComGoogleGsonFunctionalInheritanceTest_Parent_initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_(ComGoogleGsonFunctionalInheritanceTest_Child *theChild1, ComGoogleGsonFunctionalInheritanceTest_Child *theChild2) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInheritanceTest_Parent, initWithComGoogleGsonFunctionalInheritanceTest_Child_withComGoogleGsonFunctionalInheritanceTest_Child_, theChild1, theChild2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInheritanceTest_Parent)

@implementation ComGoogleGsonFunctionalInheritanceTest_Child

- (instancetype)initWithLong:(jlong)longValue
                     withInt:(jint)intValue
                 withBoolean:(jboolean)booleanValue
                withNSString:(NSString *)stringValue {
  ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(self, longValue, intValue, booleanValue, stringValue);
  return self;
}

- (void)dealloc {
  RELEASE_(stringValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:withInt:withBoolean:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "longValue_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "intValue_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "booleanValue_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "stringValue_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JIZLNSString;", "LComGoogleGsonFunctionalInheritanceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInheritanceTest_Child = { "Child", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 4, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInheritanceTest_Child;
}

@end

void ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(ComGoogleGsonFunctionalInheritanceTest_Child *self, jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) {
  NSObject_init(self);
  self->longValue_ = longValue;
  self->intValue_ = intValue;
  self->booleanValue_ = booleanValue;
  JreStrongAssign(&self->stringValue_, stringValue);
}

ComGoogleGsonFunctionalInheritanceTest_Child *new_ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInheritanceTest_Child, initWithLong_withInt_withBoolean_withNSString_, longValue, intValue, booleanValue, stringValue)
}

ComGoogleGsonFunctionalInheritanceTest_Child *create_ComGoogleGsonFunctionalInheritanceTest_Child_initWithLong_withInt_withBoolean_withNSString_(jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInheritanceTest_Child, initWithLong_withInt_withBoolean_withNSString_, longValue, intValue, booleanValue, stringValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInheritanceTest_Child)

@implementation ComGoogleGsonFunctionalInheritanceTest_BasicFinal

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{"];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"value\":"])) appendWithLong:ComGoogleGsonFunctionalInheritanceTest_BasicFinal_value];
  [sb appendWithNSString:@"}"];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value", "J", .constantValue.asLong = ComGoogleGsonFunctionalInheritanceTest_BasicFinal_value, 0x11, 0, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "value", "LComGoogleGsonFunctionalInheritanceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInheritanceTest_BasicFinal = { "BasicFinal", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 2, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInheritanceTest_BasicFinal;
}

@end

void ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init(ComGoogleGsonFunctionalInheritanceTest_BasicFinal *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalInheritanceTest_BasicFinal *new_ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInheritanceTest_BasicFinal, init)
}

ComGoogleGsonFunctionalInheritanceTest_BasicFinal *create_ComGoogleGsonFunctionalInheritanceTest_BasicFinal_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInheritanceTest_BasicFinal, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInheritanceTest_BasicFinal)

@implementation ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
                   withJavaUtilQueue:(id<JavaUtilQueue>)queue
                     withJavaUtilSet:(id<JavaUtilSet>)set
               withJavaUtilSortedSet:(id<JavaUtilSortedSet>)sortedSet {
  ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(self, list, queue, set, sortedSet);
  return self;
}

- (jboolean)listContainsWithIntArray:(IOSIntArray *)values {
  {
    IOSIntArray *a__ = values;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint value = *b__++;
      if (![((id<JavaUtilList>) nil_chk(list_)) containsWithId:JavaLangInteger_valueOfWithInt_(value)]) {
        return false;
      }
    }
  }
  return true;
}

- (jboolean)queueContainsWithLongArray:(IOSLongArray *)values {
  {
    IOSLongArray *a__ = values;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong value = *b__++;
      if (![((id<JavaUtilQueue>) nil_chk(queue_)) containsWithId:JavaLangLong_valueOfWithLong_(value)]) {
        return false;
      }
    }
  }
  return true;
}

- (jboolean)setContainsWithFloatArray:(IOSFloatArray *)values {
  {
    IOSFloatArray *a__ = values;
    jfloat const *b__ = ((IOSFloatArray *) nil_chk(a__))->buffer_;
    jfloat const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jfloat value = *b__++;
      if (![((id<JavaUtilSet>) nil_chk(set_)) containsWithId:JavaLangFloat_valueOfWithFloat_(value)]) {
        return false;
      }
    }
  }
  return true;
}

- (jboolean)sortedSetContainsWithCharArray:(IOSCharArray *)values {
  {
    IOSCharArray *a__ = values;
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar value = *b__++;
      if (![((id<JavaUtilSortedSet>) nil_chk(sortedSet_)) containsWithId:JavaLangCharacter_valueOfWithChar_(value)]) {
        return false;
      }
    }
  }
  return true;
}

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{"];
  [sb appendWithNSString:@"\"list\":"];
  [((JavaLangStringBuilder *) nil_chk(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(self, sb, list_))) appendWithNSString:@","];
  [sb appendWithNSString:@"\"queue\":"];
  [((JavaLangStringBuilder *) nil_chk(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(self, sb, queue_))) appendWithNSString:@","];
  [sb appendWithNSString:@"\"set\":"];
  [((JavaLangStringBuilder *) nil_chk(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(self, sb, set_))) appendWithNSString:@","];
  [sb appendWithNSString:@"\"sortedSet\":"];
  ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(self, sb, sortedSet_);
  [sb appendWithNSString:@"}"];
  return [sb description];
}

- (JavaLangStringBuilder *)appendWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                    withJavaUtilCollection:(id<JavaUtilCollection>)c {
  return ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(self, sb, c);
}

- (void)dealloc {
  RELEASE_(list_);
  RELEASE_(queue_);
  RELEASE_(set_);
  RELEASE_(sortedSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x80, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x80, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x80, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x80, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x2, 10, 11, -1, 12, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:withJavaUtilQueue:withJavaUtilSet:withJavaUtilSortedSet:);
  methods[1].selector = @selector(listContainsWithIntArray:);
  methods[2].selector = @selector(queueContainsWithLongArray:);
  methods[3].selector = @selector(setContainsWithFloatArray:);
  methods[4].selector = @selector(sortedSetContainsWithCharArray:);
  methods[5].selector = @selector(getExpectedJson);
  methods[6].selector = @selector(appendWithJavaLangStringBuilder:withJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 13, -1 },
    { "queue_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x2, -1, -1, 14, -1 },
    { "set_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 15, -1 },
    { "sortedSet_", "LJavaUtilSortedSet;", .constantValue.asLong = 0, 0x2, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;LJavaUtilQueue;LJavaUtilSet;LJavaUtilSortedSet;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/util/Queue<Ljava/lang/Long;>;Ljava/util/Set<Ljava/lang/Float;>;Ljava/util/SortedSet<Ljava/lang/Character;>;)V", "listContains", "[I", "queueContains", "[J", "setContains", "[F", "sortedSetContains", "[C", "append", "LJavaLangStringBuilder;LJavaUtilCollection;", "(Ljava/lang/StringBuilder;Ljava/util/Collection<*>;)Ljava/lang/StringBuilder;", "Ljava/util/List<Ljava/lang/Integer;>;", "Ljava/util/Queue<Ljava/lang/Long;>;", "Ljava/util/Set<Ljava/lang/Float;>;", "Ljava/util/SortedSet<Ljava/lang/Character;>;", "LComGoogleGsonFunctionalInheritanceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection = { "ClassWithSubInterfacesOfCollection", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 7, 4, 17, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection;
}

@end

void ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *self, id<JavaUtilList> list, id<JavaUtilQueue> queue, id<JavaUtilSet> set, id<JavaUtilSortedSet> sortedSet) {
  NSObject_init(self);
  JreStrongAssign(&self->list_, list);
  JreStrongAssign(&self->queue_, queue);
  JreStrongAssign(&self->set_, set);
  JreStrongAssign(&self->sortedSet_, sortedSet);
}

ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *new_ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(id<JavaUtilList> list, id<JavaUtilQueue> queue, id<JavaUtilSet> set, id<JavaUtilSortedSet> sortedSet) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection, initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_, list, queue, set, sortedSet)
}

ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *create_ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_(id<JavaUtilList> list, id<JavaUtilQueue> queue, id<JavaUtilSet> set, id<JavaUtilSortedSet> sortedSet) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection, initWithJavaUtilList_withJavaUtilQueue_withJavaUtilSet_withJavaUtilSortedSet_, list, queue, set, sortedSet)
}

JavaLangStringBuilder *ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection_appendWithJavaLangStringBuilder_withJavaUtilCollection_(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection *self, JavaLangStringBuilder *sb, id<JavaUtilCollection> c) {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"["];
  jboolean first = true;
  for (id __strong o in nil_chk(c)) {
    if (!first) {
      [sb appendWithNSString:@","];
    }
    else {
      first = false;
    }
    if ([o isKindOfClass:[NSString class]] || [o isKindOfClass:[JavaLangCharacter class]]) {
      [sb appendWithChar:'"'];
    }
    [sb appendWithNSString:[nil_chk(o) description]];
    if ([o isKindOfClass:[NSString class]] || [o isKindOfClass:[JavaLangCharacter class]]) {
      [sb appendWithChar:'"'];
    }
  }
  [sb appendWithNSString:@"]"];
  return sb;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInheritanceTest_ClassWithSubInterfacesOfCollection)
