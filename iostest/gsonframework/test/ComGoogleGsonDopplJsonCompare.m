//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleGsonDopplJsonCompare.h"
#include "J2ObjC_source.h"
#include "OrgSkyscreamerJsonassertJSONAssert.h"
#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
#include "java/lang/RuntimeException.h"
#include "org/json/JSONException.h"

@implementation ComGoogleGsonDopplJsonCompare

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonDopplJsonCompare_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)jsonSameAssertWithNSString:(NSString *)a
                      withNSString:(NSString *)b {
  ComGoogleGsonDopplJsonCompare_jsonSameAssertWithNSString_withNSString_(a, b);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(jsonSameAssertWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "jsonSameAssert", "LNSString;LNSString;" };
  static const J2ObjcClassInfo _ComGoogleGsonDopplJsonCompare = { "JsonCompare", "com.google.gson.doppl", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonDopplJsonCompare;
}

@end

void ComGoogleGsonDopplJsonCompare_init(ComGoogleGsonDopplJsonCompare *self) {
  NSObject_init(self);
}

ComGoogleGsonDopplJsonCompare *new_ComGoogleGsonDopplJsonCompare_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonDopplJsonCompare, init)
}

ComGoogleGsonDopplJsonCompare *create_ComGoogleGsonDopplJsonCompare_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonDopplJsonCompare, init)
}

void ComGoogleGsonDopplJsonCompare_jsonSameAssertWithNSString_withNSString_(NSString *a, NSString *b) {
  ComGoogleGsonDopplJsonCompare_initialize();
  @try {
    OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(a, b, JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
  }
  @catch (OrgJsonJSONException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonDopplJsonCompare)
