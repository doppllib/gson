//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalConcurrencyTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalConcurrencyTest

#if !defined (ComGoogleGsonFunctionalConcurrencyTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest || defined(INCLUDE_ComGoogleGsonFunctionalConcurrencyTest))
#define ComGoogleGsonFunctionalConcurrencyTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalConcurrencyTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

- (void)testMultiThreadDeserialization;

- (void)testMultiThreadSerialization;

- (void)testSingleThreadDeserialization;

- (void)testSingleThreadSerialization;

#pragma mark Protected

- (void)setUp;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalConcurrencyTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalConcurrencyTest_init(ComGoogleGsonFunctionalConcurrencyTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalConcurrencyTest *new_ComGoogleGsonFunctionalConcurrencyTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalConcurrencyTest *create_ComGoogleGsonFunctionalConcurrencyTest_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalConcurrencyTest)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest")
