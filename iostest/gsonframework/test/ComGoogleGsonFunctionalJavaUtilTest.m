//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleGsonFunctionalJavaUtilTest.h"
#include "ComGoogleGsonGson.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Currency.h"
#include "java/util/Properties.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalJavaUtilTest () {
 @public
  ComGoogleGsonGson *gson_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalJavaUtilTest, gson_, ComGoogleGsonGson *)

@interface ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder : NSObject {
 @public
  JavaUtilCurrency *value_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder, value_, JavaUtilCurrency *)

__attribute__((unused)) static void ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *self);

__attribute__((unused)) static ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *new_ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *create_ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder)

@implementation ComGoogleGsonFunctionalJavaUtilTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalJavaUtilTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
}

- (void)testCurrency {
  ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{'value':'USD'}" withIOSClass:ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"USD", [((JavaUtilCurrency *) nil_chk(((ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *) nil_chk(target))->value_)) getCurrencyCode]);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"value\":\"USD\"}", json);
  target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{'value':null}" withIOSClass:ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_class_()];
  JunitFrameworkTestCase_assertNullWithId_(((ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *) nil_chk(target))->value_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testProperties {
  JavaUtilProperties *props = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{'a':'v1','b':'v2'}" withIOSClass:JavaUtilProperties_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v1", [((JavaUtilProperties *) nil_chk(props)) getPropertyWithNSString:@"a"]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"v2", [props getPropertyWithNSString:@"b"]);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:props];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"a\":\"v1\""]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"b\":\"v2\""]);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testCurrency);
  methods[3].selector = @selector(testProperties);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalJavaUtilTest = { "JavaUtilTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalJavaUtilTest;
}

@end

void ComGoogleGsonFunctionalJavaUtilTest_init(ComGoogleGsonFunctionalJavaUtilTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalJavaUtilTest *new_ComGoogleGsonFunctionalJavaUtilTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalJavaUtilTest, init)
}

ComGoogleGsonFunctionalJavaUtilTest *create_ComGoogleGsonFunctionalJavaUtilTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalJavaUtilTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalJavaUtilTest)

@implementation ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LJavaUtilCurrency;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalJavaUtilTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder = { "CurrencyHolder", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder;
}

@end

void ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *new_ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder, init)
}

ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder *create_ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalJavaUtilTest_CurrencyHolder)
