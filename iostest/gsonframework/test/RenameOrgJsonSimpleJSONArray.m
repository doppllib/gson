//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RenameOrgJsonSimpleJSONArray.h"
#include "RenameOrgJsonSimpleJSONValue.h"
#include "java/io/IOException.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"

inline jlong RenameOrgJsonSimpleJSONArray_get_serialVersionUID();
#define RenameOrgJsonSimpleJSONArray_serialVersionUID 3957988303675231981LL
J2OBJC_STATIC_FIELD_CONSTANT(RenameOrgJsonSimpleJSONArray, serialVersionUID, jlong)

@implementation RenameOrgJsonSimpleJSONArray

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RenameOrgJsonSimpleJSONArray_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  RenameOrgJsonSimpleJSONArray_initWithJavaUtilCollection_(self, c);
  return self;
}

+ (void)writeJSONStringWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                             withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithJavaUtilCollection_withJavaIoWriter_(collection, outArg);
}

- (void)writeJSONStringWithJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithJavaUtilCollection_withJavaIoWriter_(self, outArg);
}

+ (NSString *)toJSONStringWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithJavaUtilCollection_(collection);
}

+ (void)writeJSONStringWithByteArray:(IOSByteArray *)array
                    withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithByteArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithByteArray:(IOSByteArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithByteArray_(array);
}

+ (void)writeJSONStringWithShortArray:(IOSShortArray *)array
                     withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithShortArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithShortArray:(IOSShortArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithShortArray_(array);
}

+ (void)writeJSONStringWithIntArray:(IOSIntArray *)array
                   withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithIntArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithIntArray:(IOSIntArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithIntArray_(array);
}

+ (void)writeJSONStringWithLongArray:(IOSLongArray *)array
                    withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithLongArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithLongArray:(IOSLongArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithLongArray_(array);
}

+ (void)writeJSONStringWithFloatArray:(IOSFloatArray *)array
                     withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithFloatArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithFloatArray:(IOSFloatArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithFloatArray_(array);
}

+ (void)writeJSONStringWithDoubleArray:(IOSDoubleArray *)array
                      withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithDoubleArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithDoubleArray:(IOSDoubleArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithDoubleArray_(array);
}

+ (void)writeJSONStringWithBooleanArray:(IOSBooleanArray *)array
                       withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithBooleanArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithBooleanArray:(IOSBooleanArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithBooleanArray_(array);
}

+ (void)writeJSONStringWithCharArray:(IOSCharArray *)array
                    withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithCharArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithCharArray:(IOSCharArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithCharArray_(array);
}

+ (void)writeJSONStringWithNSObjectArray:(IOSObjectArray *)array
                        withJavaIoWriter:(JavaIoWriter *)outArg {
  RenameOrgJsonSimpleJSONArray_writeJSONStringWithNSObjectArray_withJavaIoWriter_(array, outArg);
}

+ (NSString *)toJSONStringWithNSObjectArray:(IOSObjectArray *)array {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithNSObjectArray_(array);
}

- (NSString *)toJSONString {
  return RenameOrgJsonSimpleJSONArray_toJSONStringWithJavaUtilCollection_(self);
}

- (NSString *)description {
  return [self toJSONString];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 6, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 8, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 10, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 12, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 14, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 16, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 18, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 20, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 1, 22, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 23, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 24, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilCollection:);
  methods[2].selector = @selector(writeJSONStringWithJavaUtilCollection:withJavaIoWriter:);
  methods[3].selector = @selector(writeJSONStringWithJavaIoWriter:);
  methods[4].selector = @selector(toJSONStringWithJavaUtilCollection:);
  methods[5].selector = @selector(writeJSONStringWithByteArray:withJavaIoWriter:);
  methods[6].selector = @selector(toJSONStringWithByteArray:);
  methods[7].selector = @selector(writeJSONStringWithShortArray:withJavaIoWriter:);
  methods[8].selector = @selector(toJSONStringWithShortArray:);
  methods[9].selector = @selector(writeJSONStringWithIntArray:withJavaIoWriter:);
  methods[10].selector = @selector(toJSONStringWithIntArray:);
  methods[11].selector = @selector(writeJSONStringWithLongArray:withJavaIoWriter:);
  methods[12].selector = @selector(toJSONStringWithLongArray:);
  methods[13].selector = @selector(writeJSONStringWithFloatArray:withJavaIoWriter:);
  methods[14].selector = @selector(toJSONStringWithFloatArray:);
  methods[15].selector = @selector(writeJSONStringWithDoubleArray:withJavaIoWriter:);
  methods[16].selector = @selector(toJSONStringWithDoubleArray:);
  methods[17].selector = @selector(writeJSONStringWithBooleanArray:withJavaIoWriter:);
  methods[18].selector = @selector(toJSONStringWithBooleanArray:);
  methods[19].selector = @selector(writeJSONStringWithCharArray:withJavaIoWriter:);
  methods[20].selector = @selector(toJSONStringWithCharArray:);
  methods[21].selector = @selector(writeJSONStringWithNSObjectArray:withJavaIoWriter:);
  methods[22].selector = @selector(toJSONStringWithNSObjectArray:);
  methods[23].selector = @selector(toJSONString);
  methods[24].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RenameOrgJsonSimpleJSONArray_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "writeJSONString", "LJavaUtilCollection;LJavaIoWriter;", "LJavaIoIOException;", "LJavaIoWriter;", "toJSONString", "[BLJavaIoWriter;", "[B", "[SLJavaIoWriter;", "[S", "[ILJavaIoWriter;", "[I", "[JLJavaIoWriter;", "[J", "[FLJavaIoWriter;", "[F", "[DLJavaIoWriter;", "[D", "[ZLJavaIoWriter;", "[Z", "[CLJavaIoWriter;", "[C", "[LNSObject;LJavaIoWriter;", "[LNSObject;", "toString" };
  static const J2ObjcClassInfo _RenameOrgJsonSimpleJSONArray = { "JSONArray", "rename.org.json.simple", ptrTable, methods, fields, 7, 0x1, 25, 1, -1, -1, -1, -1, -1 };
  return &_RenameOrgJsonSimpleJSONArray;
}

@end

void RenameOrgJsonSimpleJSONArray_init(RenameOrgJsonSimpleJSONArray *self) {
  JavaUtilArrayList_init(self);
}

RenameOrgJsonSimpleJSONArray *new_RenameOrgJsonSimpleJSONArray_init() {
  J2OBJC_NEW_IMPL(RenameOrgJsonSimpleJSONArray, init)
}

RenameOrgJsonSimpleJSONArray *create_RenameOrgJsonSimpleJSONArray_init() {
  J2OBJC_CREATE_IMPL(RenameOrgJsonSimpleJSONArray, init)
}

void RenameOrgJsonSimpleJSONArray_initWithJavaUtilCollection_(RenameOrgJsonSimpleJSONArray *self, id<JavaUtilCollection> c) {
  JavaUtilArrayList_initWithJavaUtilCollection_(self, c);
}

RenameOrgJsonSimpleJSONArray *new_RenameOrgJsonSimpleJSONArray_initWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  J2OBJC_NEW_IMPL(RenameOrgJsonSimpleJSONArray, initWithJavaUtilCollection_, c)
}

RenameOrgJsonSimpleJSONArray *create_RenameOrgJsonSimpleJSONArray_initWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  J2OBJC_CREATE_IMPL(RenameOrgJsonSimpleJSONArray, initWithJavaUtilCollection_, c)
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithJavaUtilCollection_withJavaIoWriter_(id<JavaUtilCollection> collection, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (collection == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
    return;
  }
  jboolean first = true;
  id<JavaUtilIterator> iter = [collection iterator];
  [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'['];
  while ([((id<JavaUtilIterator>) nil_chk(iter)) hasNext]) {
    if (first) first = false;
    else [outArg writeWithInt:','];
    id value = [iter next];
    if (value == nil) {
      [outArg writeWithNSString:@"null"];
      continue;
    }
    RenameOrgJsonSimpleJSONValue_writeJSONStringWithId_withJavaIoWriter_(value, outArg);
  }
  [outArg writeWithInt:']'];
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithJavaUtilCollection_withJavaIoWriter_(collection, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithByteArray_withJavaIoWriter_(IOSByteArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfInt_(IOSByteArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfInt_(IOSByteArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithByteArray_(IOSByteArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithByteArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithShortArray_withJavaIoWriter_(IOSShortArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfInt_(IOSShortArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfInt_(IOSShortArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithShortArray_(IOSShortArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithShortArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithIntArray_withJavaIoWriter_(IOSIntArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfInt_(IOSIntArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfInt_(IOSIntArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithIntArray_(IOSIntArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithIntArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithLongArray_withJavaIoWriter_(IOSLongArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfLong_(IOSLongArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfLong_(IOSLongArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithLongArray_(IOSLongArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithLongArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithFloatArray_withJavaIoWriter_(IOSFloatArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfFloat_(IOSFloatArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfFloat_(IOSFloatArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithFloatArray_(IOSFloatArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithFloatArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithDoubleArray_withJavaIoWriter_(IOSDoubleArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfDouble_(IOSDoubleArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfDouble_(IOSDoubleArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithDoubleArray_(IOSDoubleArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithDoubleArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithBooleanArray_withJavaIoWriter_(IOSBooleanArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    [outArg writeWithNSString:NSString_java_valueOfBool_(IOSBooleanArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      [outArg writeWithNSString:NSString_java_valueOfBool_(IOSBooleanArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithBooleanArray_(IOSBooleanArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithBooleanArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithCharArray_withJavaIoWriter_(IOSCharArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[\""];
    [outArg writeWithNSString:NSString_java_valueOfChar_(IOSCharArray_Get(array, 0))];
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@"\",\""];
      [outArg writeWithNSString:NSString_java_valueOfChar_(IOSCharArray_Get(array, i))];
    }
    [outArg writeWithNSString:@"\"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithCharArray_(IOSCharArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithCharArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void RenameOrgJsonSimpleJSONArray_writeJSONStringWithNSObjectArray_withJavaIoWriter_(IOSObjectArray *array, JavaIoWriter *outArg) {
  RenameOrgJsonSimpleJSONArray_initialize();
  if (array == nil) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"null"];
  }
  else if (array->size_ == 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"[]"];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:@"["];
    RenameOrgJsonSimpleJSONValue_writeJSONStringWithId_withJavaIoWriter_(IOSObjectArray_Get(array, 0), outArg);
    for (jint i = 1; i < array->size_; i++) {
      [outArg writeWithNSString:@","];
      RenameOrgJsonSimpleJSONValue_writeJSONStringWithId_withJavaIoWriter_(IOSObjectArray_Get(array, i), outArg);
    }
    [outArg writeWithNSString:@"]"];
  }
}

NSString *RenameOrgJsonSimpleJSONArray_toJSONStringWithNSObjectArray_(IOSObjectArray *array) {
  RenameOrgJsonSimpleJSONArray_initialize();
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  @try {
    RenameOrgJsonSimpleJSONArray_writeJSONStringWithNSObjectArray_withJavaIoWriter_(array, writer);
    return [writer description];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RenameOrgJsonSimpleJSONArray)
